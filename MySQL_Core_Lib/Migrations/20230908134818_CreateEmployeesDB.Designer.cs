// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MySQL_Core_Lib;

#nullable disable

namespace MySQL_Core_Lib.Migrations
{
    [DbContext(typeof(EmployeesContext))]
    [Migration("20230908134818_CreateEmployeesDB")]
    partial class CreateEmployeesDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MySQL_Core_Lib.CurrentDeptEmp", b =>
                {
                    b.Property<string>("DeptNo")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("char(4)")
                        .HasColumnName("dept_no")
                        .IsFixedLength();

                    b.Property<int>("EmpNo")
                        .HasColumnType("int")
                        .HasColumnName("emp_no");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from_date");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to_date");

                    b.ToTable((string)null);

                    b.ToView("current_dept_emp", (string)null);
                });

            modelBuilder.Entity("MySQL_Core_Lib.Department", b =>
                {
                    b.Property<string>("DeptNo")
                        .HasMaxLength(4)
                        .HasColumnType("char(4)")
                        .HasColumnName("dept_no")
                        .IsFixedLength();

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("dept_name");

                    b.HasKey("DeptNo")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DeptName" }, "dept_name")
                        .IsUnique();

                    b.ToTable("departments", (string)null);
                });

            modelBuilder.Entity("MySQL_Core_Lib.DeptEmp", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int")
                        .HasColumnName("emp_no");

                    b.Property<string>("DeptNo")
                        .HasMaxLength(4)
                        .HasColumnType("char(4)")
                        .HasColumnName("dept_no")
                        .IsFixedLength();

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from_date");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to_date");

                    b.HasKey("EmpNo", "DeptNo")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DeptNo" }, "dept_no");

                    b.ToTable("dept_emp", (string)null);
                });

            modelBuilder.Entity("MySQL_Core_Lib.DeptEmpLatestDate", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int")
                        .HasColumnName("emp_no");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from_date");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to_date");

                    b.ToTable((string)null);

                    b.ToView("dept_emp_latest_date", (string)null);
                });

            modelBuilder.Entity("MySQL_Core_Lib.DeptManager", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int")
                        .HasColumnName("emp_no");

                    b.Property<string>("DeptNo")
                        .HasMaxLength(4)
                        .HasColumnType("char(4)")
                        .HasColumnName("dept_no")
                        .IsFixedLength();

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from_date");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to_date");

                    b.HasKey("EmpNo", "DeptNo")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DeptNo" }, "dept_no")
                        .HasDatabaseName("dept_no1");

                    b.ToTable("dept_manager", (string)null);
                });

            modelBuilder.Entity("MySQL_Core_Lib.Employee", b =>
                {
                    b.Property<int>("EmpNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("emp_no");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("enum('M','F')")
                        .HasColumnName("gender");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hire_date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("last_name");

                    b.HasKey("EmpNo")
                        .HasName("PRIMARY");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("MySQL_Core_Lib.Salary", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int")
                        .HasColumnName("emp_no");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from_date");

                    b.Property<int>("Salary1")
                        .HasColumnType("int")
                        .HasColumnName("salary");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to_date");

                    b.HasKey("EmpNo", "FromDate")
                        .HasName("PRIMARY");

                    b.ToTable("salaries", (string)null);
                });

            modelBuilder.Entity("MySQL_Core_Lib.Title", b =>
                {
                    b.Property<int>("EmpNo")
                        .HasColumnType("int")
                        .HasColumnName("emp_no");

                    b.Property<string>("Title1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from_date");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to_date");

                    b.HasKey("EmpNo", "Title1", "FromDate")
                        .HasName("PRIMARY");

                    b.ToTable("titles", (string)null);
                });

            modelBuilder.Entity("MySQL_Core_Lib.DeptEmp", b =>
                {
                    b.HasOne("MySQL_Core_Lib.Department", "DeptNoNavigation")
                        .WithMany("DeptEmps")
                        .HasForeignKey("DeptNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("dept_emp_ibfk_2");

                    b.HasOne("MySQL_Core_Lib.Employee", "EmpNoNavigation")
                        .WithMany("DeptEmps")
                        .HasForeignKey("EmpNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("dept_emp_ibfk_1");

                    b.Navigation("DeptNoNavigation");

                    b.Navigation("EmpNoNavigation");
                });

            modelBuilder.Entity("MySQL_Core_Lib.DeptManager", b =>
                {
                    b.HasOne("MySQL_Core_Lib.Department", "DeptNoNavigation")
                        .WithMany("DeptManagers")
                        .HasForeignKey("DeptNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("dept_manager_ibfk_2");

                    b.HasOne("MySQL_Core_Lib.Employee", "EmpNoNavigation")
                        .WithMany("DeptManagers")
                        .HasForeignKey("EmpNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("dept_manager_ibfk_1");

                    b.Navigation("DeptNoNavigation");

                    b.Navigation("EmpNoNavigation");
                });

            modelBuilder.Entity("MySQL_Core_Lib.Salary", b =>
                {
                    b.HasOne("MySQL_Core_Lib.Employee", "EmpNoNavigation")
                        .WithMany("Salaries")
                        .HasForeignKey("EmpNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("salaries_ibfk_1");

                    b.Navigation("EmpNoNavigation");
                });

            modelBuilder.Entity("MySQL_Core_Lib.Title", b =>
                {
                    b.HasOne("MySQL_Core_Lib.Employee", "EmpNoNavigation")
                        .WithMany("Titles")
                        .HasForeignKey("EmpNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("titles_ibfk_1");

                    b.Navigation("EmpNoNavigation");
                });

            modelBuilder.Entity("MySQL_Core_Lib.Department", b =>
                {
                    b.Navigation("DeptEmps");

                    b.Navigation("DeptManagers");
                });

            modelBuilder.Entity("MySQL_Core_Lib.Employee", b =>
                {
                    b.Navigation("DeptEmps");

                    b.Navigation("DeptManagers");

                    b.Navigation("Salaries");

                    b.Navigation("Titles");
                });
#pragma warning restore 612, 618
        }
    }
}
